<div class="maze" id="maze">

  <%
    width = @maze.width
    height = @maze.height
    max_width = max_svg_width() - 2 * padding()
    max_height = max_svg_width() - 2 * padding()
    a1 = trunc(max_width / (1 + width / 2))
    a2 = 2 * trunc(max_height / height) / :math.sqrt(3)
    a = Enum.min([a1, a2])
    h = a * :math.sqrt(3) / 2
    svg_width = 2 * padding() + a * (1 + width / 2)
    svg_height = 2 * padding() + h * height
  %>

  <svg width="100%" height="100%" viewbox="0 0 <%= svg_width %> <%= svg_height %>">
    <%= Enum.map((1..height), fn row -> %>
    <%= Enum.map((1..width), fn column -> %>

    <%
      x_offset = if Integer.mod(row, 2) == 1, do: padding(), else: padding() + a / 2
      y_offset = padding()
      vertex = {column, row}
    %>

    <%= if Integer.mod(row + column, 2) == 0 do %>
    <path d="M <%= x_offset + a * (trunc((column - 1) / 2) + 0.5) %> <%= y_offset + h * (row - 1) %>
             l <%= a / 2 %> <%= h %>
             l <%= -a %> <%= 0 %>
             l <%= a / 2 %> <%= -h %>
          "
          stroke="<%= vertex_color(@maze, vertex, @solution, @settings.show_solution, @colors, @settings.show_colors, @settings.hue, @settings.saturation) %>"
    <%= raw vertex_fill(@maze, vertex, @solution, @settings.show_solution, @colors, @settings.show_colors, @settings.hue, @settings.saturation) %> />
    <% else %>
    <path d="M <%= x_offset + a * (trunc((column) / 2) - 0.5) %> <%= y_offset + h * (row - 1) %>
             l <%= a %> <%= 0 %>
             l <%= -a / 2 %> <%= h %>
             l <%= -a / 2 %> <%= -h %>
          "
          stroke="<%= vertex_color(@maze, vertex, @solution, @settings.show_solution, @colors, @settings.show_colors, @settings.hue, @settings.saturation) %>"
            <%= raw vertex_fill(@maze, vertex, @solution, @settings.show_solution, @colors, @settings.show_colors, @settings.hue, @settings.saturation) %> />
    <% end %>

    <% end) %>
    <% end) %>

    <%= Enum.map((1..height), fn row -> %>
    <%= Enum.map((1..width), fn column -> %>

    <%
      x_offset = if Integer.mod(row, 2) == 1, do: padding(), else: padding() + a / 2
      y_offset = padding()
      vertex = {column, row}
    %>

    <%= if Integer.mod(row + column, 2) == 0 do %>
    <%
      top_x = x_offset + a * (trunc((column - 1) / 2) + 0.5)
      top_y = y_offset + h * (row - 1)
    %>
    <%= if column == 1 || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.west(vertex)) do %>
    <path d="M <%= top_x %> <%= top_y %> l <%= -a / 2 %> <%= h %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <%= if column == @maze.width || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.east(vertex)) do %>
    <path d="M <%= top_x %> <%= top_y %> l <%= a / 2 %> <%= h %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <%= if row == @maze.height || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.south(vertex)) do %>
    <path d="M <%= top_x - a / 2 %> <%= top_y + h %> l <%= a %> <%= 0 %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <% else %>
    <%
      left_x = x_offset + a * (trunc((column) / 2) - 0.5)
      left_y = y_offset + h * (row - 1)
    %>
    <%= if column == 1 || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.west(vertex)) do %>
    <path d="M <%= left_x %> <%= left_y %> l <%= a / 2 %> <%= h %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <%= if column == @maze.width || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.east(vertex)) do %>
    <path d="M <%= left_x + a %> <%= left_y %> l <%= -a / 2 %> <%= h %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <%= if row == 1 || Maze.wall?(@maze, vertex, Mazes.TriangularMaze.north(vertex)) do %>
    <path d="M <%= left_x %> <%= left_y %> l <%= a %> <%= 0 %>"
          fill="transparent" style="<%= line_style(@maze) %>" />
    <% end %>

    <% end %>

    <% end) %>
    <% end) %>
  </svg>
</div>
